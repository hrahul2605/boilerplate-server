[{"/home/dushtubunny/Desktop/drip-server/src/api/index.ts":"1","/home/dushtubunny/Desktop/drip-server/src/config/index.ts":"2","/home/dushtubunny/Desktop/drip-server/src/index.ts":"3","/home/dushtubunny/Desktop/drip-server/src/loaders/expressLoader.ts":"4","/home/dushtubunny/Desktop/drip-server/src/loaders/index.ts":"5","/home/dushtubunny/Desktop/drip-server/src/loaders/mongooseLoader.ts":"6","/home/dushtubunny/Desktop/drip-server/src/api/controllers/index.ts":"7","/home/dushtubunny/Desktop/drip-server/src/api/controllers/user/registerUser.ts":"8","/home/dushtubunny/Desktop/drip-server/src/api/middlewares/index.ts":"9","/home/dushtubunny/Desktop/drip-server/src/api/middlewares/validators/user/registerValidate.ts":"10","/home/dushtubunny/Desktop/drip-server/src/api/routes/index.ts":"11","/home/dushtubunny/Desktop/drip-server/src/api/routes/user.ts":"12","/home/dushtubunny/Desktop/drip-server/src/envionments.d.ts":"13","/home/dushtubunny/Desktop/drip-server/src/helpers/generateJwt.ts":"14","/home/dushtubunny/Desktop/drip-server/src/models/Users.ts":"15","/home/dushtubunny/Desktop/drip-server/src/services/index.ts":"16","/home/dushtubunny/Desktop/drip-server/src/services/user/findUserService.ts":"17","/home/dushtubunny/Desktop/drip-server/src/services/user/registerUserService.ts":"18"},{"size":228,"mtime":1605438732257,"results":"19","hashOfConfig":"20"},{"size":216,"mtime":1605438732261,"results":"21","hashOfConfig":"20"},{"size":453,"mtime":1605373832587,"results":"22","hashOfConfig":"20"},{"size":283,"mtime":1605337482201,"results":"23","hashOfConfig":"20"},{"size":386,"mtime":1605345241696,"results":"24","hashOfConfig":"20"},{"size":272,"mtime":1605438732261,"results":"25","hashOfConfig":"20"},{"size":98,"mtime":1605438732257,"results":"26","hashOfConfig":"20"},{"size":1286,"mtime":1605438732257,"results":"27","hashOfConfig":"20"},{"size":133,"mtime":1605438732257,"results":"28","hashOfConfig":"20"},{"size":632,"mtime":1605438732257,"results":"29","hashOfConfig":"20"},{"size":45,"mtime":1605438732257,"results":"30","hashOfConfig":"20"},{"size":261,"mtime":1605438732261,"results":"31","hashOfConfig":"20"},{"size":227,"mtime":1605438732261,"results":"32","hashOfConfig":"20"},{"size":214,"mtime":1605438732261,"results":"33","hashOfConfig":"20"},{"size":297,"mtime":1605438732261,"results":"34","hashOfConfig":"20"},{"size":183,"mtime":1605438732261,"results":"35","hashOfConfig":"20"},{"size":602,"mtime":1605438732261,"results":"36","hashOfConfig":"20"},{"size":1381,"mtime":1605438732261,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8o4ruy",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"/home/dushtubunny/Desktop/drip-server/src/api/index.ts",[],"/home/dushtubunny/Desktop/drip-server/src/config/index.ts",[],"/home/dushtubunny/Desktop/drip-server/src/index.ts",[],"/home/dushtubunny/Desktop/drip-server/src/loaders/expressLoader.ts",[],"/home/dushtubunny/Desktop/drip-server/src/loaders/index.ts",[],"/home/dushtubunny/Desktop/drip-server/src/loaders/mongooseLoader.ts",[],"/home/dushtubunny/Desktop/drip-server/src/api/controllers/index.ts",[],"/home/dushtubunny/Desktop/drip-server/src/api/controllers/user/registerUser.ts",[],"/home/dushtubunny/Desktop/drip-server/src/api/middlewares/index.ts",[],"/home/dushtubunny/Desktop/drip-server/src/api/middlewares/validators/user/registerValidate.ts",["77"],"import { RequestHandler } from 'express';\nimport Joi from 'joi';\n\nconst schema = Joi.object({\n  phone: Joi.string().length(10).required(), // TODO: Valid only for Indian phn. no.\n  email: Joi.string().email(),\n  name: Joi.string().required(),\n  password: Joi.string().required().min(8),\n});\n\nconst registerValidate: RequestHandler = async (req, res, next) => {\n  try {\n    const { body } = req;\n    await schema.validateAsync(body);\n    next();\n  } catch (err) {\n    res.status(400);\n    res.json({\n      prettyMessage: 'Validation Failed.',\n      status: 400,\n      success: false,\n    });\n  }\n};\n\nexport default registerValidate;\n","/home/dushtubunny/Desktop/drip-server/src/api/routes/index.ts",[],"/home/dushtubunny/Desktop/drip-server/src/api/routes/user.ts",[],"/home/dushtubunny/Desktop/drip-server/src/envionments.d.ts",[],"/home/dushtubunny/Desktop/drip-server/src/helpers/generateJwt.ts",["78"],"import jwt from 'jsonwebtoken';\nimport config from '../config';\n\nconst generateJwt = (userId: string) => {\n  const token = jwt.sign({ userId }, config.JWT_SECRET!);\n\n  return token;\n};\n\nexport default generateJwt;\n","/home/dushtubunny/Desktop/drip-server/src/models/Users.ts",[],"/home/dushtubunny/Desktop/drip-server/src/services/index.ts",[],"/home/dushtubunny/Desktop/drip-server/src/services/user/findUserService.ts",[],"/home/dushtubunny/Desktop/drip-server/src/services/user/registerUserService.ts",["79"],"import bcrypt from 'bcrypt';\nimport config from '../../config';\n\n// Models\nimport UserModel from '../../models/Users';\n\n// Helpers\nimport generateJwt from '../../helpers/generateJwt';\n\ninterface RegisterParamType {\n  phone: string;\n  email: string;\n  name: string;\n  password: string;\n}\ninterface RegisterPromiseType {\n  accessToken: string;\n  userId: string;\n}\n\nconst registerUserService = async (data: RegisterParamType) => {\n  try {\n    const { phone, email, name, password } = data;\n    const userId: string = `DRIP${phone}USER`;\n    const status: string = 'PENDING';\n    const updatedAt: number = Date.now();\n\n    // Generating Password Hash\n    const hashedPassoword = await bcrypt.hash(\n      password,\n      parseInt(config.BCRYPT_SALT_ROUNDS!, 10),\n    );\n    // Generating access token ( JWT )\n    const accessToken = generateJwt(userId);\n\n    // Creating the user record ( DOCUMENT )\n    const record = await new UserModel({\n      phone,\n      email,\n      name,\n      password: hashedPassoword,\n      userId,\n      status,\n      updatedAt,\n      accessToken,\n    });\n\n    // Saving the user record in db\n    await record.save();\n\n    return new Promise<RegisterPromiseType>((resolve) =>\n      resolve({ accessToken, userId }),\n    );\n  } catch (err) {\n    return new Promise<RegisterPromiseType>((_, reject) => reject(err));\n  }\n};\n\nexport default registerUserService;\n",{"ruleId":"80","severity":2,"message":"81","line":2,"column":17,"nodeType":"82","endLine":2,"endColumn":22},{"ruleId":"80","severity":2,"message":"83","line":1,"column":17,"nodeType":"82","endLine":1,"endColumn":31},{"ruleId":"80","severity":2,"message":"84","line":1,"column":20,"nodeType":"82","endLine":1,"endColumn":28},"import/no-unresolved","Unable to resolve path to module 'joi'.","Literal","Unable to resolve path to module 'jsonwebtoken'.","Unable to resolve path to module 'bcrypt'."]